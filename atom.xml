<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WeAir</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://weair.cc/"/>
  <updated>2021-07-10T13:49:29.162Z</updated>
  <id>https://weair.cc/</id>
  
  <author>
    <name>WeAir</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>编译安装Sshwifty</title>
    <link href="https://weair.cc/install-sshwifty/"/>
    <id>https://weair.cc/install-sshwifty/</id>
    <published>2021-07-09T16:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/nirui/sshwifty" title="Sshwifty" target="_blank" rel="noopener">Sshwifty</a>是一个网页版的SSH &amp; Telnet客户端，可以简单的部署在你的电脑或是服务器上。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://nodejs.org/download/release/v15.14.0/node-v15.14.0-linux-x64.tar.xz</span><br><span class="line">sudo tar -Jxvf node-v15.14.0-linux-x64.tar.xz -C /usr/<span class="built_in">local</span>/</span><br><span class="line">sudo chown -R root.root /usr/<span class="built_in">local</span>/node-v15.14.0-linux-x64/</span><br><span class="line">sudo ln -sf /usr/<span class="built_in">local</span>/node-v15.14.0-linux-x64/bin/node /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">sudo ln -sf /usr/<span class="built_in">local</span>/node-v15.14.0-linux-x64/bin/npm /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">sudo ln -sf /usr/<span class="built_in">local</span>/node-v15.14.0-linux-x64/bin/npx /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure><h3 id="安装Go"><a href="#安装Go" class="headerlink" title="安装Go"></a>安装Go</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://golang.org/dl/go1.16.5.linux-amd64.tar.gz</span><br><span class="line">sudo tar -zxvf go1.16.5.linux-amd64.tar.gz -C /usr/<span class="built_in">local</span>/</span><br><span class="line">sudo ln -sf /usr/<span class="built_in">local</span>/go/bin/go /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">sudo ln -sf /usr/<span class="built_in">local</span>/go/bin/gofmt /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure><h3 id="编译安装Sshwifty"><a href="#编译安装Sshwifty" class="headerlink" title="编译安装Sshwifty"></a>编译安装Sshwifty</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo git <span class="built_in">clone</span> https://github.com/nirui/sshwifty.git</span><br><span class="line"><span class="built_in">cd</span> sshwifty</span><br><span class="line">sudo npm install</span><br><span class="line">sudo npm run build</span><br></pre></td></tr></table></figure><p>编译完成后会在当前路径生成二进制文件<strong>sshwifty</strong>。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其它问题可查询<a href="https://github.com/nirui/sshwifty/blob/master/README.md" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/nirui/sshwifty&quot; title=&quot;Sshwifty&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Sshwifty&lt;/a&gt;是一个网页版的SSH &amp;amp; Telnet客户端，可以简单的部
      
    
    </summary>
    
    
      <category term="Sshwifty" scheme="https://weair.cc/tags/Sshwifty/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu添加PyCharm快捷启动方式</title>
    <link href="https://weair.cc/pycharm-quick-lanuch/"/>
    <id>https://weair.cc/pycharm-quick-lanuch/</id>
    <published>2021-03-13T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>Ubuntu安装好PyCharm后没有快捷方式，使用起来过于麻烦，所以添加一个快捷启动方式，方便使用。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/share/applications/PyCharm.desktop</span><br></pre></td></tr></table></figure><p>添加如下内容并保存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Type=Application</span><br><span class="line">Name=PyCharm</span><br><span class="line">GenericName=PyCharm</span><br><span class="line">Comment=The Python IDE for Professional Developers</span><br><span class="line">Exec=sh /path/PyCharm/bin/pycharm.sh</span><br><span class="line">Icon=/path/PyCharm/bin/pycharm.png</span><br><span class="line">Terminal=false</span><br><span class="line">Categories=Application;</span><br></pre></td></tr></table></figure><p>修改<strong>Exec</strong>及<strong>Icon</strong>路径为PyCharm的启动路径及图标即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;Ubuntu安装好PyCharm后没有快捷方式，使用起来过于麻烦，所以添加一个快捷启动方式，方便使用。&lt;/p&gt;
&lt;h3 id=&quot;步骤&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="PyCharm" scheme="https://weair.cc/tags/PyCharm/"/>
    
  </entry>
  
  <entry>
    <title>安装HedgeDoc</title>
    <link href="https://weair.cc/install-hedgedoc/"/>
    <id>https://weair.cc/install-hedgedoc/</id>
    <published>2021-02-16T16:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hedgedoc.org/" title="HedgeDoc" target="_blank" rel="noopener">Hedgedoc</a>是Hedgedoc团队的一个基于Javascript的Markdown文档实时编辑分享平台，其前身为CodiMD。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>提前安装Nginx、Docker、Docker Compose，Docker以及Docker Compose的安装可以查阅<a href="https://weair.cc/install-bitwarden_rs/" title="安装">这里</a>。如果开启防火墙，请放行3000端口或关闭防火墙。</p><h3 id="部署HedgeDoc"><a href="#部署HedgeDoc" class="headerlink" title="部署HedgeDoc"></a>部署HedgeDoc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/hedgedoc/container.git hedgedoc-container</span><br><span class="line"><span class="built_in">cd</span> hedgedoc-container</span><br><span class="line">docker-compose up</span><br></pre></td></tr></table></figure><p>然后打开<strong>ip:3000</strong>访问。</p><h3 id="配置HedgeDoc"><a href="#配置HedgeDoc" class="headerlink" title="配置HedgeDoc"></a>配置HedgeDoc</h3><p>为HedgeDoc配置域名，否则上传图片会报错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>添加如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">- CMD_DB_URL=postgres://hedgedoc:password@database:5432/hedgedoc</span><br><span class="line">- CMD_DOMAIN=domain.name</span><br><span class="line">- CMD_PROTOCOL_USESSL=true</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>然后重新启动服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>更多配置可查询<a href="https://docs.hedgedoc.org/configuration/" title="配置" target="_blank" rel="noopener">这里</a>。</p><h3 id="Nginx反代"><a href="#Nginx反代" class="headerlink" title="Nginx反代"></a>Nginx反代</h3><p>反向代理配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">map $http_upgrade $connection_upgrade &#123;</span><br><span class="line">        default upgrade;</span><br><span class="line">        &apos;&apos;      close;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">        server_name domain.name;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:3000;</span><br><span class="line">                proxy_set_header Host $host; </span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr; </span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">                proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /socket.io/ &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:3000;</span><br><span class="line">                proxy_set_header Host $host; </span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr; </span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">                proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">                proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">                proxy_set_header Connection $connection_upgrade;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    ssl_certificate fullchain.pem;</span><br><span class="line">    ssl_certificate_key privkey.pem;</span><br><span class="line">    include options-ssl-nginx.conf;</span><br><span class="line">    ssl_dhparam ssl-dhparams.pem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启Nginx，然后就能通过域名访问了。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其它问题可查询<a href="https://docs.hedgedoc.org/" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://hedgedoc.org/&quot; title=&quot;HedgeDoc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hedgedoc&lt;/a&gt;是Hedgedoc团队的一个基于Javascript的Markdown文档实时编辑分享平台
      
    
    </summary>
    
    
      <category term="HedgeDoc" scheme="https://weair.cc/tags/HedgeDoc/"/>
    
  </entry>
  
  <entry>
    <title>acme.sh申请泛域名证书</title>
    <link href="https://weair.cc/acme-sh/"/>
    <id>https://weair.cc/acme-sh/</id>
    <published>2021-01-20T16:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/acmesh-official/acme.sh" title="acme.sh" target="_blank" rel="noopener">acme.sh</a>实现了acme协议，可以从Let’s Encrypt生成免费的证书。</p><h3 id="安装acme-sh"><a href="#安装acme-sh" class="headerlink" title="安装acme.sh"></a>安装acme.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh</span><br></pre></td></tr></table></figure><p>acme.sh将安装在<strong>home</strong>目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.acme.sh/</span><br></pre></td></tr></table></figure><p>可以创建一个alias方便使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> acme.sh=~/.acme.sh/acme.sh</span><br></pre></td></tr></table></figure><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d domain.name -d *.domain.name --dns \</span><br><span class="line"> --yes-I-know-dns-manual-mode-enough-go-ahead-please</span><br></pre></td></tr></table></figure><p>然后将TXT记录添加到DNS记录中，等待DNS记录生效。</p><h3 id="重新申请签发证书"><a href="#重新申请签发证书" class="headerlink" title="重新申请签发证书"></a>重新申请签发证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --renew -d domain.name -d *.domain.name \</span><br><span class="line">  --yes-I-know-dns-manual-mode-enough-go-ahead-please</span><br></pre></td></tr></table></figure><p>生成的证书位于<strong>~/.acme.sh/domain.name</strong>目录下。</p><h3 id="卸载acme-sh"><a href="#卸载acme-sh" class="headerlink" title="卸载acme.sh"></a>卸载acme.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --uninstall</span><br><span class="line">rm -rf ~/.acme.sh</span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其它问题可查询<a href="https://github.com/acmesh-official/acme.sh/wiki" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh&quot; title=&quot;acme.sh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;acme.sh&lt;/a&gt;实现了acme协议，可以从Let’s Encrypt
      
    
    </summary>
    
    
      <category term="acme.sh" scheme="https://weair.cc/tags/acme-sh/"/>
    
  </entry>
  
  <entry>
    <title>安装Vaultwarden</title>
    <link href="https://weair.cc/install-vaultwarden/"/>
    <id>https://weair.cc/install-vaultwarden/</id>
    <published>2020-12-08T16:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/dani-garcia/vaultwarden" title="vaultwarden" target="_blank" rel="noopener">Vaultwarden</a>原为Bitwarden RS，由Rust编写，是Bitwarden服务API的替代实现，并与Bitwarden客户端相兼容，是一款开源的密码管理软件。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>提前安装Nginx。</p><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://get.docker.com/ | sudo bash</span><br></pre></td></tr></table></figure><h3 id="安装Docker-Compose"><a href="#安装Docker-Compose" class="headerlink" title="安装Docker Compose"></a>安装Docker Compose</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="启动Docker并设置开机启动"><a href="#启动Docker并设置开机启动" class="headerlink" title="启动Docker并设置开机启动"></a>启动Docker并设置开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h3 id="部署Vaultwarden"><a href="#部署Vaultwarden" class="headerlink" title="部署Vaultwarden"></a>部署Vaultwarden</h3><p>创建Vaultwarden的运行目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt &amp;&amp; sudo mkdir vaultwarden &amp;&amp; <span class="built_in">cd</span> vaultwarden</span><br></pre></td></tr></table></figure><h3 id="创建docker-compose配置文件"><a href="#创建docker-compose配置文件" class="headerlink" title="创建docker-compose配置文件"></a>创建docker-compose配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /opt/vaultwarden/docker-compose.yml</span><br></pre></td></tr></table></figure><p>文件配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  vaultwarden:</span><br><span class="line">    image: vaultwarden/server:latest</span><br><span class="line">    container_name: vaultwarden</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8088:80&quot;</span><br><span class="line">      - &quot;3012:3012&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - ./bw-data:/data</span><br><span class="line">    environment:</span><br><span class="line">#后台管理登陆密码</span><br><span class="line">      - ADMIN_TOKEN=admin_token</span><br><span class="line">#域名配置</span><br><span class="line">      - DOMAIN=https://domain.name</span><br><span class="line">#更改workers数量</span><br><span class="line">      - ROCKET_WORKERS=20</span><br><span class="line">#禁用显示密码提示</span><br><span class="line">      - SHOW_PASSWORD_HINT=false</span><br><span class="line">#是否开启注册，自用的话自己搭建好注册后改成false</span><br><span class="line">      - SIGNUPS_ALLOWED=false</span><br><span class="line">#启用WebSocket通知</span><br><span class="line">      - WEBSOCKET_ENABLED=true</span><br><span class="line">#是否开启Web客户端</span><br><span class="line">      - WEB_VAULT_ENABLED=true</span><br><span class="line">#邮件配置</span><br><span class="line">      - SMTP_HOST=smtp.domain.name</span><br><span class="line">      - SMTP_FROM=no-reply@domain.name</span><br><span class="line">      - SMTP_PORT=587</span><br><span class="line">      - SMTP_SSL=true</span><br><span class="line">      - SMTP_USERNAME=no-reply@domain.name</span><br><span class="line">      - SMTP_PASSWORD=password</span><br></pre></td></tr></table></figure><h3 id="启动vaultwarden服务"><a href="#启动vaultwarden服务" class="headerlink" title="启动vaultwarden服务"></a>启动vaultwarden服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/vaultwarden</span><br><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure><p>运行后会自动拉去镜像和设置Vaultwarden。</p><h3 id="关闭重启服务命令"><a href="#关闭重启服务命令" class="headerlink" title="关闭重启服务命令"></a>关闭重启服务命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose down</span><br><span class="line">sudo docker-compose restart</span><br></pre></td></tr></table></figure><h3 id="Nginx反代"><a href="#Nginx反代" class="headerlink" title="Nginx反代"></a>Nginx反代</h3><p>反向代理配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8088;</span><br><span class="line">    proxy_set_header Host               $host;</span><br><span class="line">    proxy_set_header X-Real-IP          $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto  $scheme;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /notifications/hub &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:3012;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">location /notifications/hub/negotiate &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8088;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /admin &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8088;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启Nginx，然后就能通过域名访问了。</p><h3 id="Vaultwarden升级"><a href="#Vaultwarden升级" class="headerlink" title="Vaultwarden升级"></a>Vaultwarden升级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/vaultwarden</span><br><span class="line">sudo docker-compose down</span><br><span class="line">sudo docker pull vaultwarden/server:latest</span><br><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其它问题可查询<a href="https://github.com/dani-garcia/vaultwarden/wiki" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/dani-garcia/vaultwarden&quot; title=&quot;vaultwarden&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vaultwarden&lt;/a&gt;原为Bitwarden RS，由Ru
      
    
    </summary>
    
    
      <category term="Vaultwarden" scheme="https://weair.cc/tags/Vaultwarden/"/>
    
  </entry>
  
  <entry>
    <title>VMware无法使用拖放功能</title>
    <link href="https://weair.cc/centos-vmware-tools/"/>
    <id>https://weair.cc/centos-vmware-tools/</id>
    <published>2020-05-22T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>虚拟机安装完CentOS 7后，从宿主机向虚拟机内拖放文件提示错误无法拖放，或拖放进虚拟机后文件损坏。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>首先卸载系统自带的open-vm-tools。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove open-vm-tools</span><br></pre></td></tr></table></figure><p>关闭虚拟机，编辑虚拟机配置，找到<strong>CD/DVD(IDE)</strong>，选择使用ISO映像文件，路径一般为<strong>C:\Program Files (x86)\VMware\VMware Workstation\linux.iso</strong>，保存后重启。</p><p>进入虚拟机，选择<strong>VMware Tools</strong>光盘，复制里面的<strong>VMwareTools-xxxxx.tar.gz</strong>到主目录下并解压，进入<strong>vmware-tools-distrib</strong>目录，执行<strong>vmware-install.pl</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf VMwareTools-xxxxx.tar.gz</span><br><span class="line"><span class="built_in">cd</span> vmware-tools-distrib</span><br><span class="line">sudo ./vmware-install.pl</span><br></pre></td></tr></table></figure><p>然后一路回车确认，安装完成后重启虚拟机。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;虚拟机安装完CentOS 7后，从宿主机向虚拟机内拖放文件提示错误无法拖放，或拖放进虚拟机后文件损坏。&lt;/p&gt;
&lt;h3 id=&quot;解决办法&quot;&gt;
      
    
    </summary>
    
    
      <category term="CentOS 7" scheme="https://weair.cc/tags/CentOS-7/"/>
    
      <category term="VMware-Tools" scheme="https://weair.cc/tags/VMware-Tools/"/>
    
  </entry>
  
  <entry>
    <title>GitLab配置邮件回复</title>
    <link href="https://weair.cc/gitlab-reply-by-email/"/>
    <id>https://weair.cc/gitlab-reply-by-email/</id>
    <published>2020-05-15T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/default</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'mail_room_enabled=true'</span> | sudo tee -a /etc/default/gitlab</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /home/git/gitlab</span><br><span class="line">sudo -u git -H editor config/gitlab.yml</span><br></pre></td></tr></table></figure><p>找到如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">## Reply by email</span><br><span class="line"># Allow users to comment on issues and merge requests by replying to notification emails.</span><br><span class="line"># For documentation on how to set this up, see http://doc.gitlab.com/ce/administration/reply_by_email.html</span><br><span class="line">incoming_email:</span><br><span class="line">  enabled: false</span><br><span class="line"></span><br><span class="line">  # The email address including the `%&#123;key&#125;` placeholder that will be replaced to reference the item being replied to.</span><br><span class="line">  # The placeholder can be omitted but if present, it must appear in the &quot;user&quot; part of the address (before the `@`).</span><br><span class="line">  # Please be aware that a placeholder is required for the Service Desk feature to work.</span><br><span class="line">  address: &quot;gitlab-incoming+%&#123;key&#125;@gmail.com&quot;</span><br><span class="line"></span><br><span class="line">  # Email account username</span><br><span class="line">  # With third party providers, this is usually the full email address.</span><br><span class="line">  # With self-hosted email servers, this is usually the user part of the email address.</span><br><span class="line">  user: &quot;gitlab-incoming@gmail.com&quot;</span><br><span class="line">  # Email account password</span><br><span class="line">  password: &quot;[REDACTED]&quot;</span><br><span class="line"></span><br><span class="line">  # IMAP server host</span><br><span class="line">  host: &quot;imap.gmail.com&quot;</span><br><span class="line">  # IMAP server port</span><br><span class="line">  port: 993</span><br><span class="line">  # Whether the IMAP server uses SSL</span><br><span class="line">  ssl: true</span><br><span class="line">  # Whether the IMAP server uses StartTLS</span><br><span class="line">  start_tls: false</span><br><span class="line"></span><br><span class="line">  # The mailbox where incoming mail will end up. Usually &quot;inbox&quot;.</span><br><span class="line">  mailbox: &quot;inbox&quot;</span><br><span class="line">  # The IDLE command timeout.</span><br><span class="line">  idle_timeout: 60</span><br><span class="line">  # The log file path for the structured log file.</span><br><span class="line">  # Since `mail_room` is run independently of Rails, an absolute path is preferred.</span><br><span class="line">  # The default is &apos;log/mail_room_json.log&apos; relative to the root of the Rails app.</span><br><span class="line">  #</span><br><span class="line">  # log_path: log/mail_room_json.log</span><br></pre></td></tr></table></figure><p><strong>false</strong>改为<strong>true</strong>，修改回复账号密码及IMAP配置。</p><h3 id="重启GitLab"><a href="#重启GitLab" class="headerlink" title="重启GitLab"></a>重启GitLab</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service gitlab restart</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">sudo /etc/init.d/gitlab restart</span><br></pre></td></tr></table></figure><h3 id="验证配置是否正确"><a href="#验证配置是否正确" class="headerlink" title="验证配置是否正确"></a>验证配置是否正确</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gitlab:incoming_email:check RAILS_ENV=production</span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其它问题可查询<a href="https://docs.gitlab.com/ce/administration/reply_by_email.html" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;编辑配置文件&quot;&gt;&lt;a href=&quot;#编辑配置文件&quot; class=&quot;headerlink&quot; title=&quot;编辑配置文件&quot;&gt;&lt;/a&gt;编辑配置文件&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
      
    
    </summary>
    
    
      <category term="GitLab" scheme="https://weair.cc/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>安装minIO</title>
    <link href="https://weair.cc/install-minio/"/>
    <id>https://weair.cc/install-minio/</id>
    <published>2020-05-14T16:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://min.io/" title="minIO" target="_blank" rel="noopener">minIO</a>是与Amazon S3兼容的云存储服务器，在Apache License v2下发布。作为对象存储，MinIO可以存储非结构化数据，例如照片、视频、日志文件、备份和容器映像。对象的最大大小为5TB。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>提前安装Nginx。</p><h3 id="创建minIO用户及目录"><a href="#创建minIO用户及目录" class="headerlink" title="创建minIO用户及目录"></a>创建minIO用户及目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd minio-user</span><br><span class="line">sudo useradd -M -s `<span class="built_in">which</span> nologin` -g minio-user minio-user</span><br><span class="line">sudo mkdir -p /data/minio</span><br><span class="line">sudo chown -R minio-user:minio-user /data/minio</span><br></pre></td></tr></table></figure><h3 id="下载minIO二进制文件"><a href="#下载minIO二进制文件" class="headerlink" title="下载minIO二进制文件"></a>下载minIO二进制文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://dl.min.io/server/minio/release/linux-amd64/minio -O /usr/<span class="built_in">local</span>/bin/minio</span><br><span class="line">sudo chmod a+x /usr/<span class="built_in">local</span>/bin/minio</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>如果开启防火墙，请放行9000端口或关闭防火墙。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u minio-user /usr/<span class="built_in">local</span>/bin/minio server /data/minio</span><br></pre></td></tr></table></figure><p>然后打开<strong>ip:9000</strong>，输入回显的<strong>AccessKey</strong>以及<strong>SecretKey</strong>访问。</p><h3 id="在Linux中以service方式运行"><a href="#在Linux中以service方式运行" class="headerlink" title="在Linux中以service方式运行"></a>在Linux中以service方式运行</h3><p>官方<a href="https://github.com/minio/minio-service/blob/master/linux-systemd/minio.service" title="github" target="_blank" rel="noopener">github</a>给了示例配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/default/minio &lt;&lt; EOF</span><br><span class="line">MINIO_VOLUMES=<span class="string">"/data/minio/"</span></span><br><span class="line">MINIO_OPTS=<span class="string">"--address :9000"</span></span><br><span class="line">MINIO_ACCESS_KEY=Server-Access-Key</span><br><span class="line">MINIO_SECRET_KEY=Server-Secret-Key</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo wget https://raw.githubusercontent.com/minio/minio-service/master/linux-systemd/minio.service -O /etc/systemd/system/minio.service</span><br><span class="line">sudo chmod a+x /etc/systemd/system/minio.service</span><br></pre></td></tr></table></figure><p><strong>Server-Access-Key</strong>及<strong>Server-Secret-Key</strong>修改为自己的<strong>AccessKey</strong>及<strong>SecretKey</strong>。</p><h3 id="Nginx反代"><a href="#Nginx反代" class="headerlink" title="Nginx反代"></a>Nginx反代</h3><p>反向代理配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name domain.name;</span><br><span class="line"></span><br><span class="line">    ignore_invalid_headers off;</span><br><span class="line">    client_max_body_size 0;</span><br><span class="line">    proxy_buffering off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line"></span><br><span class="line">        proxy_connect_timeout 300;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Connection &quot;&quot;;</span><br><span class="line">        chunked_transfer_encoding off;</span><br><span class="line"></span><br><span class="line">        proxy_pass http://localhost:9000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就能通过域名访问了。</p><h3 id="启动minIO"><a href="#启动minIO" class="headerlink" title="启动minIO"></a>启动minIO</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl start minio</span><br></pre></td></tr></table></figure><h3 id="设置Bucket公开访问"><a href="#设置Bucket公开访问" class="headerlink" title="设置Bucket公开访问"></a>设置Bucket公开访问</h3><p>选择需要公开访问的Bucket，点击<strong>Edit policy</strong>，选为<strong>Read Only</strong>，点击<strong>Add</strong>添加，即可公开访问该Bucket中的文件。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其它问题可查询<a href="https://docs.min.io/docs/" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://min.io/&quot; title=&quot;minIO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;minIO&lt;/a&gt;是与Amazon S3兼容的云存储服务器，在Apache License v2下发布。作为对象存储，MinIO可以
      
    
    </summary>
    
    
      <category term="minIO" scheme="https://weair.cc/tags/minIO/"/>
    
  </entry>
  
  <entry>
    <title>源码升级GitLab</title>
    <link href="https://weair.cc/update-gitlab/"/>
    <id>https://weair.cc/update-gitlab/</id>
    <published>2020-04-07T16:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-备份"><a href="#1-备份" class="headerlink" title="1.备份"></a>1.备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab</span><br><span class="line"></span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gitlab:backup:create RAILS_ENV=production</span><br></pre></td></tr></table></figure><h3 id="2-停止GitLab服务"><a href="#2-停止GitLab服务" class="headerlink" title="2.停止GitLab服务"></a>2.停止GitLab服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service gitlab stop</span><br></pre></td></tr></table></figure><h3 id="3-获取最新代码"><a href="#3-获取最新代码" class="headerlink" title="3.获取最新代码"></a>3.获取最新代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab</span><br><span class="line"></span><br><span class="line">sudo -u git -H git fetch --all --prune</span><br><span class="line">sudo -u git -H git checkout -- db/schema.rb</span><br><span class="line">sudo -u git -H git checkout -- locale</span><br><span class="line"></span><br><span class="line"><span class="comment"># 'BRANCH'改为需要升级的版本</span></span><br><span class="line">sudo -u git -H git checkout BRANCH</span><br></pre></td></tr></table></figure><h3 id="4-升级GitLab-Shell"><a href="#4-升级GitLab-Shell" class="headerlink" title="4.升级GitLab Shell"></a>4.升级GitLab Shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab-shell</span><br><span class="line"></span><br><span class="line">sudo -u git -H git fetch --all --tags --prune</span><br><span class="line">sudo -u git -H git checkout v$(&lt;/home/git/gitlab/GITLAB_SHELL_VERSION)</span><br><span class="line">sudo -u git -H make build</span><br></pre></td></tr></table></figure><h3 id="5-升级GitLab-Workhorse"><a href="#5-升级GitLab-Workhorse" class="headerlink" title="5.升级GitLab Workhorse"></a>5.升级GitLab Workhorse</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab-workhorse</span><br><span class="line"></span><br><span class="line">sudo -u git -H git fetch --all --tags --prune</span><br><span class="line">sudo -u git -H git checkout v$(&lt;/home/git/gitlab/GITLAB_WORKHORSE_VERSION)</span><br><span class="line">sudo -u git -H make</span><br></pre></td></tr></table></figure><h3 id="6-升级Gitaly"><a href="#6-升级Gitaly" class="headerlink" title="6.升级Gitaly"></a>6.升级Gitaly</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitaly</span><br><span class="line">sudo -u git -H git fetch --all --tags --prune</span><br><span class="line">sudo -u git -H git checkout v$(&lt;/home/git/gitlab/GITALY_SERVER_VERSION)</span><br><span class="line">sudo -u git -H make</span><br></pre></td></tr></table></figure><h3 id="7-升级GitLab-Pages"><a href="#7-升级GitLab-Pages" class="headerlink" title="7.升级GitLab Pages"></a>7.升级GitLab Pages</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab-pages</span><br><span class="line"></span><br><span class="line">sudo -u git -H git fetch --all --tags --prune</span><br><span class="line">sudo -u git -H git checkout v$(&lt;/home/git/gitlab/GITLAB_PAGES_VERSION)</span><br><span class="line">sudo -u git -H make</span><br></pre></td></tr></table></figure><h3 id="8-升级配置文件"><a href="#8-升级配置文件" class="headerlink" title="8.升级配置文件"></a>8.升级配置文件</h3><p>检查配置文件的不同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查GitLab配置文件</span></span><br><span class="line">git diff origin/PREVIOUS_BRANCH:config/gitlab.yml.example origin/BRANCH:config/gitlab.yml.example</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查NGINX配置文件</span></span><br><span class="line"><span class="comment"># HTTPS</span></span><br><span class="line">git diff origin/PREVIOUS_BRANCH:lib/support/nginx/gitlab-ssl origin/BRANCH:lib/support/nginx/gitlab-ssl</span><br><span class="line"><span class="comment"># HTTP</span></span><br><span class="line">git diff origin/PREVIOUS_BRANCH:lib/support/nginx/gitlab origin/BRANCH:lib/support/nginx/gitlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新启动脚本</span></span><br><span class="line">sudo cp lib/support/init.d/gitlab /etc/init.d/gitlab</span><br></pre></td></tr></table></figure><h3 id="9-安装库、迁移数据等"><a href="#9-安装库、迁移数据等" class="headerlink" title="9.安装库、迁移数据等"></a>9.安装库、迁移数据等</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab</span><br><span class="line"></span><br><span class="line">sudo -u git -H bundle install --without development <span class="built_in">test</span> mysql --deployment</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理旧的gem包（可选）</span></span><br><span class="line">sudo -u git -H bundle clean</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据迁移</span></span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake db:migrate RAILS_ENV=production</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译GetText PO</span></span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gettext:compile RAILS_ENV=production</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译静态文件</span></span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake yarn:install gitlab:assets:clean gitlab:assets:compile RAILS_ENV=production NODE_ENV=production NODE_OPTIONS=<span class="string">"--max_old_space_size=4096"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理缓存文件</span></span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake cache:clear RAILS_ENV=production</span><br></pre></td></tr></table></figure><h3 id="10-启动GitLab服务"><a href="#10-启动GitLab服务" class="headerlink" title="10.启动GitLab服务"></a>10.启动GitLab服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service gitlab start</span><br><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure><h3 id="11-检查GitLab状态"><a href="#11-检查GitLab状态" class="headerlink" title="11.检查GitLab状态"></a>11.检查GitLab状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab</span><br><span class="line"></span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gitlab:env:info RAILS_ENV=production</span><br><span class="line"></span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gitlab:check RAILS_ENV=production</span><br></pre></td></tr></table></figure><p>如果所有项目都是绿色，升级成功。</p><p>其它问题可查询<a href="https://docs.gitlab.com/ee/update/upgrading_from_source.html" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-备份&quot;&gt;&lt;a href=&quot;#1-备份&quot; class=&quot;headerlink&quot; title=&quot;1.备份&quot;&gt;&lt;/a&gt;1.备份&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="GitLab" scheme="https://weair.cc/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>Debian修改默认启动内核</title>
    <link href="https://weair.cc/debian-change-kernel/"/>
    <id>https://weair.cc/debian-change-kernel/</id>
    <published>2020-03-22T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看当前系统内核"><a href="#查看当前系统内核" class="headerlink" title="查看当前系统内核"></a>查看当前系统内核</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat /boot/grub/grub.cfg | grep menuentry</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ x<span class="string">"<span class="variable">$&#123;feature_menuentry_id&#125;</span>"</span> = xy ]; <span class="keyword">then</span></span><br><span class="line">  menuentry_id_option=<span class="string">"--id"</span></span><br><span class="line">  menuentry_id_option=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> menuentry_id_option</span><br><span class="line">menuentry <span class="string">'Debian GNU/Linux'</span> --class debian --class gnu-linux --class gnu --class os <span class="variable">$menuentry_id_option</span> <span class="string">'gnulinux-simple-cdd695b0-e558-4915-ba1d-38c769fee1b1'</span> &#123;</span><br><span class="line">submenu <span class="string">'Advanced options for Debian GNU/Linux'</span> <span class="variable">$menuentry_id_option</span> <span class="string">'gnulinux-advanced-cdd695b0-e558-4915-ba1d-38c769fee1b1'</span> &#123;</span><br><span class="line">menuentry <span class="string">'Debian GNU/Linux, with Linux 4.9.0-12-amd64'</span> --class debian --class gnu-linux --class gnu --class os <span class="variable">$menuentry_id_option</span> <span class="string">'gnulinux-4.9.0-12-amd64-advanced-cdd695b0-e558-4915-ba1d-38c769fee1b1'</span> &#123;</span><br><span class="line">menuentry <span class="string">'Debian GNU/Linux, with Linux 4.9.0-12-amd64  (recovery mode)'</span> --class debian --class gnu-linux --class gnu --class os <span class="variable">$menuentry_id_option</span> <span class="string">'gnulinux-4.9.0-12-amd64-recovery-cdd695b0-e558-4915-ba1d-38c769fee1b1'</span> &#123;</span><br><span class="line">menuentry <span class="string">'Debian GNU/Linux, with Linux 4.9.0-11-amd64'</span> --class debian --class gnu-linux --class gnu --class os <span class="variable">$menuentry_id_option</span> <span class="string">'gnulinux-4.9.0-11-amd64-advanced-cdd695b0-e558-4915-ba1d-38c769fee1b1'</span> &#123;</span><br><span class="line">menuentry <span class="string">'Debian GNU/Linux, with Linux 4.9.0-11-amd64 (recovery mode)'</span> --class debian --class gnu-linux --class gnu --class os <span class="variable">$menuentry_id_option</span> <span class="string">'gnulinux-4.9.0-11-amd64-recovery-cdd695b0-e558-4915-ba1d-38c769fee1b1'</span> &#123;</span><br></pre></td></tr></table></figure><p>###修改grub文件</p><p>假设修改启动内核为<code>4.9.0-11</code>，修改文件<code>/etc/default/grub</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/default/grub</span><br><span class="line"></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">修改为</span><br><span class="line">GRUB_DEFAULT=<span class="string">"Advanced options for Debian GNU/Linux&gt;Debian GNU/Linux, with Linux 4.9.0-11-amd64"</span></span><br></pre></td></tr></table></figure><p>其中<code>Advanced options for Debian GNU/Linux</code>是一级菜单，<code>Debian GNU/Linux, with Linux 4.9.0-11-amd64</code>是二级菜单，两者之间用<code>&gt;</code>连接。</p><h3 id="更新grub文件"><a href="#更新grub文件" class="headerlink" title="更新grub文件"></a>更新grub文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><p>重启之后使用<code>uname -r</code>可以查看当前的系统内核。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看当前系统内核&quot;&gt;&lt;a href=&quot;#查看当前系统内核&quot; class=&quot;headerlink&quot; title=&quot;查看当前系统内核&quot;&gt;&lt;/a&gt;查看当前系统内核&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
    
      <category term="Linux Kernel" scheme="https://weair.cc/tags/Linux-Kernel/"/>
    
      <category term="Debian" scheme="https://weair.cc/tags/Debian/"/>
    
  </entry>
  
  <entry>
    <title>CentOS修改默认启动内核</title>
    <link href="https://weair.cc/centos-change-kernel/"/>
    <id>https://weair.cc/centos-change-kernel/</id>
    <published>2020-03-22T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看当前系统内核"><a href="#查看当前系统内核" class="headerlink" title="查看当前系统内核"></a>查看当前系统内核</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo awk -F\<span class="string">' '</span><span class="variable">$1</span>==<span class="string">"menuentry "</span> &#123;<span class="built_in">print</span> <span class="variable">$2</span>&#125;<span class="string">' /etc/grub2.cfg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CentOS Linux (3.10.0-1062.18.1.el7.x86_64) 7 (Core)</span></span><br><span class="line"><span class="string">CentOS Linux 7 Rescue 37934a904e9234509c00524a5e733795 (3.10.0-1062.18.1.el7.x86_64)</span></span><br><span class="line"><span class="string">CentOS Linux (3.10.0-957.27.2.el7.x86_64) 7 (Core)</span></span><br><span class="line"><span class="string">CentOS Linux (0-rescue-65113b1a0d2f6087d515e6a8cd0ee7ef) 7 (Core)</span></span><br></pre></td></tr></table></figure><h3 id="设置默认启动内核"><a href="#设置默认启动内核" class="headerlink" title="设置默认启动内核"></a>设置默认启动内核</h3><p>假设修改启动内核为<code>3.10.0-957.27.2</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-set-default <span class="string">'CentOS Linux (3.10.0-957.27.2.el7.x86_64) 7 (Core)'</span></span><br></pre></td></tr></table></figure><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><p>重启之后使用<code>uname -r</code>可以查看当前的系统内核。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看当前系统内核&quot;&gt;&lt;a href=&quot;#查看当前系统内核&quot; class=&quot;headerlink&quot; title=&quot;查看当前系统内核&quot;&gt;&lt;/a&gt;查看当前系统内核&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
    
      <category term="CentOS" scheme="https://weair.cc/tags/CentOS/"/>
    
      <category term="Linux Kernel" scheme="https://weair.cc/tags/Linux-Kernel/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 18.04安装sysv-rc-conf</title>
    <link href="https://weair.cc/ubuntu-install-sysv-rc-conf/"/>
    <id>https://weair.cc/ubuntu-install-sysv-rc-conf/</id>
    <published>2020-03-15T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="编辑Ubuntu源"><a href="#编辑Ubuntu源" class="headerlink" title="编辑Ubuntu源"></a>编辑Ubuntu源</h3><p>在软件源列表<code>sources.list</code>添加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加内容如下</span></span><br><span class="line">deb http://archive.ubuntu.com/ubuntu/ trusty main universe restricted multiverse</span><br></pre></td></tr></table></figure><h3 id="更新源并安装sysv-rc-conf"><a href="#更新源并安装sysv-rc-conf" class="headerlink" title="更新源并安装sysv-rc-conf"></a>更新源并安装sysv-rc-conf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">apt install -y sysv-rc-conf</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;编辑Ubuntu源&quot;&gt;&lt;a href=&quot;#编辑Ubuntu源&quot; class=&quot;headerlink&quot; title=&quot;编辑Ubuntu源&quot;&gt;&lt;/a&gt;编辑Ubuntu源&lt;/h3&gt;&lt;p&gt;在软件源列表&lt;code&gt;sources.list&lt;/code&gt;添加如下内容：&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="Ubuntu 18.04" scheme="https://weair.cc/tags/Ubuntu-18-04/"/>
    
      <category term="sysv-rc-conf" scheme="https://weair.cc/tags/sysv-rc-conf/"/>
    
  </entry>
  
  <entry>
    <title>GitLab配置SMTP发送邮件</title>
    <link href="https://weair.cc/gitlab-configure-smtp/"/>
    <id>https://weair.cc/gitlab-configure-smtp/</id>
    <published>2020-03-08T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>首先进入/home/git/gitlab/config/initializers/目录，将该目录下的<code>smtp_settings.rb.sample</code>复制一份并重命名为<code>smtp_settings.rb</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab/config/initializers</span><br><span class="line">sudo -u git -H cp smtp_settings.rb.sample smtp_settings.rb</span><br></pre></td></tr></table></figure><p>编辑<code>smtp_settings.rb</code>文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H editor smtp_settings.rb</span><br></pre></td></tr></table></figure><p>更改配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if Rails.env.production?</span><br><span class="line">  Rails.application.config.action_mailer.delivery_method = :smtp</span><br><span class="line"></span><br><span class="line">  ActionMailer::Base.delivery_method = :smtp</span><br><span class="line">  ActionMailer::Base.smtp_settings = &#123;</span><br><span class="line">    address: &quot;smtp.yandex.com&quot;,</span><br><span class="line">    port: 587,</span><br><span class="line">    user_name: &quot;gitlab@domain.name&quot;,</span><br><span class="line">    password: &quot;Password&quot;,</span><br><span class="line">    domain: &quot;domain.name&quot;,</span><br><span class="line">    authentication: :login,</span><br><span class="line">    enable_starttls_auto: true,</span><br><span class="line">    openssl_verify_mode: &apos;none&apos;</span><br><span class="line">  &#125;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>同时编辑/home/git/gitlab/config/目录下的<code>gitlab.yml</code>文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab/config/</span><br><span class="line">sudo -u git -H editor gitlab.yml</span><br></pre></td></tr></table></figure><p>找到如下配置并更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">email_from: gitlab@domain.name</span><br><span class="line">email_display_name: GitLab</span><br><span class="line">email_reply_to: gitlab@domain.name</span><br></pre></td></tr></table></figure><h3 id="重启GitLab"><a href="#重启GitLab" class="headerlink" title="重启GitLab"></a>重启GitLab</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service gitlab restart</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">sudo /etc/init.d/gitlab restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;编辑配置文件&quot;&gt;&lt;a href=&quot;#编辑配置文件&quot; class=&quot;headerlink&quot; title=&quot;编辑配置文件&quot;&gt;&lt;/a&gt;编辑配置文件&lt;/h3&gt;&lt;p&gt;首先进入/home/git/gitlab/config/initializers/目录，将该目录下的&lt;cod
      
    
    </summary>
    
    
      <category term="GitLab" scheme="https://weair.cc/tags/GitLab/"/>
    
      <category term="SMTP" scheme="https://weair.cc/tags/SMTP/"/>
    
  </entry>
  
  <entry>
    <title>源码安装GitLab</title>
    <link href="https://weair.cc/install-gitlab/"/>
    <id>https://weair.cc/install-gitlab/</id>
    <published>2020-03-03T16:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://about.gitlab.com/" title="GitLab" target="_blank" rel="noopener">GitLab</a>是由GitLab Inc.开发，使用MIT许可证的基于网络的Git仓库管理工具，且具有wiki和issue跟踪功能。</p><h3 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h3><p>系统为Debian 9，内存至少2G，建议增加Swap交换分区解决内存不足等问题。</p><h3 id="1-安装软件包及依赖"><a href="#1-安装软件包及依赖" class="headerlink" title="1.安装软件包及依赖"></a>1.安装软件包及依赖</h3><p>安装vim编辑器并设置为默认编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y vim</span><br><span class="line">sudo update-alternatives --<span class="built_in">set</span> editor /usr/bin/vim.basic</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y build-essential zlib1g-dev libyaml-dev libssl-dev libgdbm-dev libre2-dev libreadline-dev libncurses5-dev libffi-dev curl openssh-server checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libicu-dev logrotate rsync python-docutils pkg-config cmake runit libkrb5-dev</span><br></pre></td></tr></table></figure><p>因为从GitLab12.0起，需要含有<code>libpcre2</code>编译的Git，所以需要重新编译安装Git。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 移除旧的Git</span></span><br><span class="line">sudo apt remove git-core</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">sudo apt install -y libcurl4-openssl-dev libexpat1-dev gettext libz-dev libssl-dev build-essential</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载pcre2源码并编译安装</span></span><br><span class="line">curl --silent --show-error --location https://ftp.pcre.org/pub/pcre/pcre2-10.33.tar.gz --output pcre2.tar.gz</span><br><span class="line">tar -xzf pcre2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> pcre2-10.33</span><br><span class="line">chmod +x configure</span><br><span class="line">./configure --prefix=/usr --<span class="built_in">enable</span>-jit</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载Git源码并编译</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">curl --remote-name --location --progress https://www.kernel.org/pub/software/scm/git/git-2.24.1.tar.gz</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'ad5334956301c86841eb1e5b1bb20884a6bad89a10a6762c958220c7cf64da02  git-2.24.1.tar.gz'</span> | shasum -a256 -c - &amp;&amp; tar -xzf git-2.24.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> git-2.24.1/</span><br><span class="line">./configure --with-libpcre</span><br><span class="line">make prefix=/usr/<span class="built_in">local</span> all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装到/usr/local/bin目录下</span></span><br><span class="line">sudo make prefix=/usr/<span class="built_in">local</span> install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软连接（可选）</span></span><br><span class="line"><span class="comment"># ln -sf /usr/local/bin/git /usr/bin/git</span></span><br></pre></td></tr></table></figure><p>为了使自定义图标能够正常工作，需要安装GraphicsMagick。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y graphicsmagick</span><br></pre></td></tr></table></figure><p>为了接收邮件通知，需要安装postfix。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y postfix</span><br></pre></td></tr></table></figure><h3 id="2-Ruby"><a href="#2-Ruby" class="headerlink" title="2.Ruby"></a>2.Ruby</h3><p>运行GitLab需要使用Ruby，需要安装Ruby。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果安装有旧的Ruby 1.8版本的话，需要先卸载掉旧版本</span></span><br><span class="line">sudo apt remove ruby1.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载Ruby源码并编译安装</span></span><br><span class="line">curl --remote-name --progress https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.5.tar.gz</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'1416ce288fb8bfeae07a12b608540318c9cace71  ruby-2.6.5.tar.gz'</span> | shasum -c - &amp;&amp; tar xzf ruby-2.6.5.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ruby-2.6.5</span><br><span class="line">./configure --<span class="built_in">disable</span>-install-rdoc</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>然后安装Bundler（版本小于2.X）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install bundler --no-document --version <span class="string">'&lt; 2'</span></span><br></pre></td></tr></table></figure><h3 id="3-Go"><a href="#3-Go" class="headerlink" title="3.Go"></a>3.Go</h3><p>从GitLab 8.0开始，GitLab有几个用Go编写的守护程序。要安装GitLab，需要一个Go编译器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果有旧的Go编译器的话，需要先移除掉旧版本</span></span><br><span class="line">sudo rm -rf /usr/<span class="built_in">local</span>/go</span><br><span class="line"></span><br><span class="line">curl --remote-name --progress https://dl.google.com/go/go1.13.5.linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'512103d7ad296467814a6e3f635631bd35574cab3369a97a323c9a585ccaa569  go1.13.5.linux-amd64.tar.gz'</span> | shasum -a256 -c - &amp;&amp; sudo tar -C /usr/<span class="built_in">local</span> -xzf go1.13.5.linux-amd64.tar.gz</span><br><span class="line">sudo ln -sf /usr/<span class="built_in">local</span>/go/bin/&#123;go,godoc,gofmt&#125; /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">rm go1.13.5.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="4-Node"><a href="#4-Node" class="headerlink" title="4.Node"></a>4.Node</h3><p>从GitLab 8.17开始，GitLab需要使用Node来编译JavaScript，并使用Yarn来管理JavaScript。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装node v12.x</span></span><br><span class="line">curl --location https://deb.nodesource.com/setup_12.x | sudo bash -</span><br><span class="line">sudo apt install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装yarn</span></span><br><span class="line">curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://dl.yarnpkg.com/debian/ stable main"</span> | sudo tee /etc/apt/sources.list.d/yarn.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install yarn</span><br></pre></td></tr></table></figure><h3 id="5-添加GitLab用户"><a href="#5-添加GitLab用户" class="headerlink" title="5.添加GitLab用户"></a>5.添加GitLab用户</h3><p>为GitLab创建一个<code>git</code>用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser --disabled-login --gecos <span class="string">'GitLab'</span> git</span><br></pre></td></tr></table></figure><h3 id="6-数据库"><a href="#6-数据库" class="headerlink" title="6.数据库"></a>6.数据库</h3><p>创建PostgreSQL数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y postgresql postgresql-client libpq-dev postgresql-contrib</span><br></pre></td></tr></table></figure><p>为GitLab创建数据库用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql -d template1 -c <span class="string">"CREATE USER git CREATEDB;"</span></span><br></pre></td></tr></table></figure><p>创建<code>pg_trgm</code>扩展（GitLab8.6+所需）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql -d template1 -c <span class="string">"CREATE EXTENSION IF NOT EXISTS pg_trgm;"</span></span><br></pre></td></tr></table></figure><p>创建数据库并赋予用户权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql -d template1 -c <span class="string">"CREATE DATABASE gitlabhq_production OWNER git;"</span></span><br></pre></td></tr></table></figure><p>尝试使用用户连接数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H psql -d gitlabhq_production</span><br></pre></td></tr></table></figure><p>检查扩展<code>pg_trgm</code>是否生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT <span class="literal">true</span> AS enabled</span><br><span class="line">FROM pg_available_extensions</span><br><span class="line">WHERE name = <span class="string">'pg_trgm'</span></span><br><span class="line">AND installed_version IS NOT NULL;</span><br></pre></td></tr></table></figure><p>如果扩展生效，则显示以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">enabled</span><br><span class="line">---------</span><br><span class="line"> t</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure><p>退出数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlabhq_production&gt; \q</span><br></pre></td></tr></table></figure><p>修改Postgresql的配置文件允许机器访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/postgresql/9.6/main/pg_hba.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文件末尾处</span></span><br><span class="line"><span class="comment"># "local" is for Unix domain socket connections only</span></span><br><span class="line"><span class="built_in">local</span>   all             all                                     trust</span><br><span class="line"><span class="comment"># IPv4 local connections:</span></span><br><span class="line">host    all             all             127.0.0.1/32            trust</span><br><span class="line"><span class="comment"># IPv6 local connections:</span></span><br><span class="line">host    all             all             ::1/128                 trust</span><br></pre></td></tr></table></figure><p>重启Postgresql服务。</p><h3 id="7-Redis"><a href="#7-Redis" class="headerlink" title="7.Redis"></a>7.Redis</h3><p>GitLab需要安装Redis并且Redis版本至少不低于2.8。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install redis-server</span><br></pre></td></tr></table></figure><p>配置Redis</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/redis/redis.conf /etc/redis/redis.conf.orig</span><br><span class="line"></span><br><span class="line">sudo sed <span class="string">'s/^port .*/port 0/'</span> /etc/redis/redis.conf.orig | sudo tee /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'unixsocket /var/run/redis/redis.sock'</span> | sudo tee -a /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'unixsocketperm 770'</span> | sudo tee -a /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line">sudo mkdir -p /var/run/redis</span><br><span class="line">sudo chown redis:redis /var/run/redis</span><br><span class="line">sudo chmod 755 /var/run/redis</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -d /etc/tmpfiles.d ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">'d  /var/run/redis  0755  redis  redis  10d  -'</span> | sudo tee -a /etc/tmpfiles.d/redis.conf</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sudo service redis-server restart</span><br><span class="line"></span><br><span class="line">sudo usermod -aG redis git</span><br></pre></td></tr></table></figure><h3 id="8-GitLab"><a href="#8-GitLab" class="headerlink" title="8.GitLab"></a>8.GitLab</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在git的home目录安装GitLab</span></span><br><span class="line"><span class="built_in">cd</span> /home/git</span><br></pre></td></tr></table></figure><p>下载GitLab源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H git <span class="built_in">clone</span> https://gitlab.com/gitlab-org/gitlab-foss.git -b 12-8-stable gitlab</span><br></pre></td></tr></table></figure><p>配置GitLab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab</span><br><span class="line"></span><br><span class="line">sudo -u git -H cp config/gitlab.yml.example config/gitlab.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑gitlab.yml修改域名、是否使用HTTPS以及git路径，修改以下配置</span></span><br><span class="line">sudo -u git -H editor config/gitlab.yml</span><br><span class="line"></span><br><span class="line">gitlab:</span><br><span class="line">  host: domain.name</span><br><span class="line">  port: 443 <span class="comment"># Set to 443 if using HTTPS, see installation.md#using-https for additional HTTPS configuration details</span></span><br><span class="line">  https: <span class="literal">true</span> <span class="comment"># Set to true if using HTTPS, see installation.md#using-https for additional HTTPS configuration details</span></span><br><span class="line">...</span><br><span class="line">git:</span><br><span class="line">  bin_path: /usr/<span class="built_in">local</span>/bin/git</span><br><span class="line"></span><br><span class="line">sudo -u git -H cp config/secrets.yml.example config/secrets.yml</span><br><span class="line">sudo -u git -H chmod 0600 config/secrets.yml</span><br><span class="line"></span><br><span class="line">sudo chown -R git <span class="built_in">log</span>/</span><br><span class="line">sudo chown -R git tmp/</span><br><span class="line">sudo chmod -R u+rwX,go-w <span class="built_in">log</span>/</span><br><span class="line">sudo chmod -R u+rwX tmp/</span><br><span class="line"></span><br><span class="line">sudo chmod -R u+rwX tmp/pids/</span><br><span class="line">sudo chmod -R u+rwX tmp/sockets/</span><br><span class="line"></span><br><span class="line">sudo -u git -H mkdir -p public/uploads/</span><br><span class="line"></span><br><span class="line">sudo chmod 0700 public/uploads</span><br><span class="line"></span><br><span class="line">sudo chmod -R u+rwX builds/</span><br><span class="line"></span><br><span class="line">sudo chmod -R u+rwX shared/artifacts/</span><br><span class="line"></span><br><span class="line">sudo chmod -R ug+rwX shared/pages/</span><br><span class="line"></span><br><span class="line">sudo -u git -H cp config/unicorn.rb.example config/unicorn.rb</span><br><span class="line"></span><br><span class="line">sudo -u git -H cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置Git全局配置</span></span><br><span class="line">sudo -u git -H git config --global core.autocrlf input</span><br><span class="line"></span><br><span class="line">sudo -u git -H git config --global gc.auto 0</span><br><span class="line"></span><br><span class="line">sudo -u git -H git config --global repack.writeBitmaps <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">sudo -u git -H git config --global receive.advertisePushOptions <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">sudo -u git -H git config --global core.fsyncObjectFiles <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">sudo -u git -H cp config/resque.yml.example config/resque.yml</span><br></pre></td></tr></table></figure><p>配置GitLab数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git cp config/database.yml.postgresql config/database.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改数据库配置，把secure password改成你自己的密码。</span></span><br><span class="line">sudo -u git -H editor config/database.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># PRODUCTION</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">production:</span><br><span class="line">  adapter: postgresql</span><br><span class="line">  encoding: unicode</span><br><span class="line">  database: gitlabhq_production</span><br><span class="line">  pool: 10</span><br><span class="line">  username: git</span><br><span class="line">  password: <span class="string">"yourpassword"</span></span><br><span class="line">  host: localhost</span><br><span class="line"></span><br><span class="line">sudo -u git -H chmod o-rwx config/database.yml</span><br></pre></td></tr></table></figure><p>安装Gems，确保bundle的版本大于等于1.5.2小于2.X（执行bundle -v）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle install --deployment --without development <span class="built_in">test</span> mysql aws kerberos</span><br></pre></td></tr></table></figure><p>安装GitLab Shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gitlab:shell:install REDIS_URL=unix:/var/run/redis/redis.sock RAILS_ENV=production SKIP_STORAGE_VALIDATION=<span class="literal">true</span> SKIP_STORAGE_VALIDATION=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>安装GitLab Workhorse</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake <span class="string">"gitlab:workhorse:install[/home/git/gitlab-workhorse]"</span> RAILS_ENV=production</span><br></pre></td></tr></table></figure><p>安装GitLab Pages</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git</span><br><span class="line">sudo -u git -H git <span class="built_in">clone</span> https://gitlab.com/gitlab-org/gitlab-pages.git</span><br><span class="line"><span class="built_in">cd</span> gitlab-pages</span><br><span class="line">sudo -u git -H git checkout v$(&lt;/home/git/gitlab/GITLAB_PAGES_VERSION)</span><br><span class="line">sudo -u git -H make</span><br></pre></td></tr></table></figure><p>安装Gitaly</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab</span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake <span class="string">"gitlab:gitaly:install[/home/git/gitaly,/home/git/repositories]"</span> RAILS_ENV=production</span><br><span class="line"></span><br><span class="line">sudo chmod 0700 /home/git/gitlab/tmp/sockets/private</span><br><span class="line">sudo chown git /home/git/gitlab/tmp/sockets/private</span><br></pre></td></tr></table></figure><p>运行Gitaly</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gitlab_path=/home/git/gitlab</span><br><span class="line">gitaly_path=/home/git/gitaly</span><br><span class="line"></span><br><span class="line">sudo -u git -H sh -c <span class="string">"<span class="variable">$gitlab_path</span>/bin/daemon_with_pidfile <span class="variable">$gitlab_path</span>/tmp/pids/gitaly.pid <span class="variable">$gitaly_path</span>/gitaly <span class="variable">$gitaly_path</span>/config.toml &gt;&gt; <span class="variable">$gitlab_path</span>/log/gitaly.log 2&gt;&amp;1 &amp;"</span></span><br></pre></td></tr></table></figure><p>初始化数据库并激活高级功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/gitlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置GitLab密码为你自己的密码</span></span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gitlab:setup RAILS_ENV=production GITLAB_ROOT_PASSWORD=yourpassword GITLAB_ROOT_EMAIL=mail@domain.name force=yes DISABLE_DATABASE_ENVIRONMENT_CHECK=1</span><br></pre></td></tr></table></figure><p>安装启动脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo cp lib/support/init.d/gitlab /etc/init.d/gitlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启</span></span><br><span class="line">sudo sysv-rc-conf gitlab on</span><br></pre></td></tr></table></figure><p>设置Logrotate</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlab</span><br></pre></td></tr></table></figure><p>检查GitLab及其环境是否配置正确</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gitlab:env:info RAILS_ENV=production</span><br></pre></td></tr></table></figure><p>编译GetText PO</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gettext:compile RAILS_ENV=production</span><br></pre></td></tr></table></figure><p>编译静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H yarn install --production --pure-lockfile</span><br><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gitlab:assets:compile RAILS_ENV=production NODE_ENV=production NODE_OPTIONS=<span class="string">"--max_old_space_size=4096"</span></span><br></pre></td></tr></table></figure><p>启动GitLab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service gitlab start</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">sudo /etc/init.d/gitlab restart</span><br></pre></td></tr></table></figure><h3 id="9-NGINX"><a href="#9-NGINX" class="headerlink" title="9.NGINX"></a>9.NGINX</h3><p>NGINX是GitLab官方支持的Web服务器。安装NGINX并将GitLab的配置文件复制到NGINX的配置目录里，编辑相应文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HTTP</span></span><br><span class="line">sudo cp lib/support/nginx/gitlab /etc/nginx/sites-available/gitlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTPS</span></span><br><span class="line">sudo cp lib/support/nginx/gitlab-ssl /etc/nginx/sites-available/gitlab-ssl</span><br></pre></td></tr></table></figure><p>测试并重启NGINX。</p><h3 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h3><p>检查GitLab状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle <span class="built_in">exec</span> rake gitlab:check RAILS_ENV=production</span><br></pre></td></tr></table></figure><p>如果所有项目都是绿色，安装成功。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>打开<strong>ip</strong>或<strong>域名</strong>访问GitLab服务，进行后续配置。</p><p><img src="/images/install-gitlab.jpg" alt="GitLab"></p><p>其它问题可查询<a href="https://docs.gitlab.com/ee/install/installation.html" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://about.gitlab.com/&quot; title=&quot;GitLab&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitLab&lt;/a&gt;是由GitLab Inc.开发，使用MIT许可证的基于网络的Git仓库管理工具，且具有wi
      
    
    </summary>
    
    
      <category term="GitLab" scheme="https://weair.cc/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>Debian9 ~/.bashrc文件不生效</title>
    <link href="https://weair.cc/fix-bashrc-doesn&#39;t-work/"/>
    <id>https://weair.cc/fix-bashrc-doesn&#39;t-work/</id>
    <published>2020-03-01T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>新建用户user02，将user01目录下的<strong>.bashrc</strong>文件拷贝到了user02目录下，<code>su - user02</code>登陆user02时，<strong>.bashrc</strong>里设置的alias命令提示不存在。</p><p>但是<code>source ~/.bashrc</code>后却可以正常使用。</p><p>后来发现原因可能是缺少<strong>.profile</strong>文件导致的。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>1、将user01目录下的<strong>.profile</strong>文件拷贝到user02目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /home/user01/.profile /home/user02/</span><br><span class="line">sudo chown user02:user02 /home/user02/.profile</span><br></pre></td></tr></table></figure><p>2、在user02目录下新建<strong>.profile</strong>文件，内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if [ -n &quot;$BASH_VERSION&quot; ]; then</span><br><span class="line">    if [ -f &quot;$HOME/.bashrc&quot; ]; then</span><br><span class="line">. &quot;$HOME/.bashrc&quot;</span><br><span class="line">    fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>然后，退出重新登陆user02就行了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;新建用户user02，将user01目录下的&lt;strong&gt;.bashrc&lt;/strong&gt;文件拷贝到了user02目录下，&lt;code&gt;su
      
    
    </summary>
    
    
      <category term=".bashrc" scheme="https://weair.cc/tags/bashrc/"/>
    
  </entry>
  
  <entry>
    <title>yum提示Error: rpmdb open failed</title>
    <link href="https://weair.cc/fix-rpmdb/"/>
    <id>https://weair.cc/fix-rpmdb/</id>
    <published>2019-03-21T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>使用<strong>yum update</strong>更新软件包时，进程被杀死，再次<strong>yum update</strong>时，出现如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">error: rpmdb: BDB0113 Thread/process 228046/140448106682176 failed: BDB1507 Thread died in Berkeley DB library</span><br><span class="line">error: db5 error(-30973) from dbenv-&gt;failchk: BDB0087 DB_RUNRECOVERY: Fatal error, run database recovery</span><br><span class="line">error: cannot open Packages index using db5 -  (-30973)</span><br><span class="line">error: cannot open Packages database in /var/lib/rpm</span><br><span class="line">CRITICAL:yum.main:</span><br><span class="line"></span><br><span class="line">Error: rpmdb open failed</span><br></pre></td></tr></table></figure><p>原因大概是，rpm数据库出现损坏。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>删除<strong>/var/lib/rpm/</strong>路径下的以<strong>__db.</strong>开头的文件（建议提前备份）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /var/lib/rpm/__db.*</span><br></pre></td></tr></table></figure><p>重建rpm数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm --rebuilddb</span><br></pre></td></tr></table></figure><p>清除所有yum的缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum clean all</span><br></pre></td></tr></table></figure><p>然后，再重新执行<strong>yum update</strong>命令就能升级软件包了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;使用&lt;strong&gt;yum update&lt;/strong&gt;更新软件包时，进程被杀死，再次&lt;strong&gt;yum update&lt;/strong
      
    
    </summary>
    
    
      <category term="rpmdb" scheme="https://weair.cc/tags/rpmdb/"/>
    
  </entry>
  
  <entry>
    <title>反向代理Wikipedia</title>
    <link href="https://weair.cc/reverse-proxy-wikipedia/"/>
    <id>https://weair.cc/reverse-proxy-wikipedia/</id>
    <published>2019-03-19T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>需要准备的东西请查阅上篇<a href="https://weair.xyz/reverse-proxy-google/" title="反向代理Google" target="_blank" rel="noopener">反向代理Google</a>的前言，因为需要反代多个域名，所以需要设置多个域名解析记录，分别为<strong>domain.name</strong>、<strong>m.domain.name</strong>、<strong>upload.domain.name</strong>。</p><h3 id="Nginx反代"><a href="#Nginx反代" class="headerlink" title="Nginx反代"></a>Nginx反代</h3><p>Nginx需编译安装<strong><a href="https://github.com/yaoweibin/ngx_http_substitutions_filter_module" title="nginx_substitutions_filter" target="_blank" rel="noopener">nginx_substitutions_filter</a></strong>模块。</p><p>Nginx配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name domain.name;</span><br><span class="line">    rewrite ^ https://$server_name$request_uri? permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line">    server_name domain.name;</span><br><span class="line"></span><br><span class="line">    ssl_protocols       TLSv1.2 TLSv1.3;</span><br><span class="line">    ssl_ciphers         TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_certificate     /path/cert/pem.pem;</span><br><span class="line">    ssl_certificate_key /path/cert/key.key;</span><br><span class="line">    ssl_session_cache   shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line">        </span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass https://zh.wikipedia.org;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_cookie_domain zh.wikipedia.org domain.name;</span><br><span class="line">        proxy_redirect https://zh.wikipedia.org/ /;</span><br><span class="line">        proxy_redirect https://zh.m.wikipedia.org/ https://m.domain.name/;</span><br><span class="line">        proxy_set_header Accept-Encoding &quot;&quot;;</span><br><span class="line">        proxy_set_header X-Real_IP $remote_addr;</span><br><span class="line">        proxy_set_header User-Agent $http_user_agent;</span><br><span class="line">        proxy_set_header referer https://zh.wikipedia.org$request_uri;</span><br><span class="line"></span><br><span class="line">        subs_filter_types text/css text/xml text/javascript application/javascript application/json;</span><br><span class="line">        subs_filter zh.wikipedia.org domain.name;</span><br><span class="line">        subs_filter zh.m.wikipedia.org m.domain.name;</span><br><span class="line">        subs_filter upload.wikimedia.org upload.domain.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location https://zh.m.wikipedia.org/&#123;</span><br><span class="line">        rewrite ^/(.*) https://m.domain.name/$1 permanent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name m.domain.name;</span><br><span class="line">    rewrite ^ https://$server_name$request_uri? permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line">    server_name m.domain.name;</span><br><span class="line"></span><br><span class="line">    ssl_protocols       TLSv1.2 TLSv1.3;</span><br><span class="line">    ssl_ciphers         TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_certificate     /path/cert/pem.pem;</span><br><span class="line">    ssl_certificate_key /path/cert/key.key;</span><br><span class="line">    ssl_session_cache   shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line">    </span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass https://zh.m.wikipedia.org;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_redirect https://zh.m.wikipedia.org/ /;</span><br><span class="line">        proxy_cookie_domain zh.m.wikipedia.org m.domain.name;</span><br><span class="line">        proxy_set_header Accept-Encoding &quot;&quot;;</span><br><span class="line">        proxy_set_header X-Real_IP $remote_addr;</span><br><span class="line">        proxy_set_header User-Agent $http_user_agent;</span><br><span class="line">        proxy_set_header referer https://zh.m.wikipedia.org$request_uri;</span><br><span class="line"></span><br><span class="line">        subs_filter_types text/css text/xml text/javascript application/javascript application/json;</span><br><span class="line">        subs_filter zh.wikipedia.org domain.name;</span><br><span class="line">        subs_filter zh.m.wikipedia.org m.domain.name;</span><br><span class="line">        subs_filter upload.wikimedia.org upload.domain.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name upload.domain.name;</span><br><span class="line">    rewrite ^ https://$server_name$request_uri? permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line">    server_name upload.domain.name;</span><br><span class="line"></span><br><span class="line">    ssl_protocols       TLSv1.2 TLSv1.3;</span><br><span class="line">    ssl_ciphers         TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_certificate     /path/cert/pem.pem;</span><br><span class="line">    ssl_certificate_key /path/cert/key.key;</span><br><span class="line">    ssl_session_cache   shared:SSL:10m;</span><br><span class="line">    </span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass https://upload.wikimedia.org;</span><br><span class="line">        proxy_cookie_domain upload.wikimedia.org upload.domain.name;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_set_header X-Real_IP $remote_addr;</span><br><span class="line">        proxy_set_header User-Agent $http_user_agent;</span><br><span class="line">        proxy_set_header referer https://upload.wikimedia.org$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p><strong>domain.name</strong>替换成你自己的域名，建议为域名添加SSL证书，可以使用<a href="https://certbot.eff.org/" title="Let’s Encrypt" target="_blank" rel="noopener">Let’s Encrypt</a>的通配符证书。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;需要准备的东西请查阅上篇&lt;a href=&quot;https://weair.xyz/reverse-proxy-google/&quot; title=&quot;反
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://weair.cc/tags/Nginx/"/>
    
      <category term="Wikipedia" scheme="https://weair.cc/tags/Wikipedia/"/>
    
  </entry>
  
  <entry>
    <title>编译安装aria2</title>
    <link href="https://weair.cc/build-aria2/"/>
    <id>https://weair.cc/build-aria2/</id>
    <published>2019-03-08T16:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://aria2.github.io" title="aria2" target="_blank" rel="noopener">aria2</a>是一款轻量的支持多协议的开源命令行下载工具，支持HTTP/HTTPS、FTP、SFTP、BitTorrent和Metalink等协议的下载。aria2可通过内置的JSON-RPC及XML-RPC接口来进行操作。</p><h3 id="下载aria2源码"><a href="#下载aria2源码" class="headerlink" title="下载aria2源码"></a>下载aria2源码</h3><p>官方<a href="https://github.com/aria2/aria2" title="github" target="_blank" rel="noopener">github</a>下载aria2的最新代码并解压。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo git <span class="built_in">clone</span> https://github.com/aria2/aria2.git</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>Debian系安装依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y libssh2-1-dev libc-ares-dev libxml2-dev zlib1g-dev libsqlite3-dev pkg-config libssl-dev libcppunit-dev autoconf automake autotools-dev autopoint gcc g++ libtool make</span><br></pre></td></tr></table></figure><p>Red Hat系安装依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y libgcrypt-devel libxml2-devel libssh2-devel openssl-devel gettext-devel cppunit cppunit-devel  c-ares-devel zlib-devel sqlite-devel pkgconfig autoconf automake gcc gcc-c++ libtool make xorg-x11-util-macros.noarch dh-autoreconf.noarch</span><br></pre></td></tr></table></figure><h3 id="编译安装ari2"><a href="#编译安装ari2" class="headerlink" title="编译安装ari2"></a>编译安装ari2</h3><p>生成配置脚本和构建程序所需的其它文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo autoreconf -i</span><br></pre></td></tr></table></figure><p>出现如下警告是因为<strong>configure.ac</strong>文件里的<em>gettext</em>的版本问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">configure.ac:731: warning: The &apos;AM_PROG_MKDIR_P&apos; macro is deprecated，and its use is discouraged.</span><br><span class="line">configure.ac:731: You should use the Autoconf-provided &apos;AC_PROG_MKDIR_P&apos; macro instead,</span><br><span class="line">configure.ac:731: and use &apos;$(MKDIR_P)&apos; instead of &apos;$(mkdir_p)&apos;in your Makefile.am files.</span><br></pre></td></tr></table></figure><p>找到<strong>configure.ac</strong>文件的<code>AM_GNU_GETTEXT_VERSION([0.18])</code>并修改为<code>AM_GNU_GETTEXT_VERSION([0.19])</code>，重新执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo autoreconf -i --force</span><br></pre></td></tr></table></figure><p>重新生成configure配置脚本。</p><p>PS：aria2限制了最大线程数为16，可通过修改<strong>src/OptionHandlerFactory.cc</strong>里的<code>TEXT_MAX_CONNECTION_PER_SERVER</code>变量，将16改为任意整数。</p><p>构建aria2。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br></pre></td></tr></table></figure><p>编译安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure><p>PS：aria2默认路径为<strong>/usr/local/bin/aria2c</strong>。</p><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aria2c -v</span><br></pre></td></tr></table></figure><p>查看aria2版本。</p><p>更多编译相关查询官方<a href="https://github.com/aria2/aria2/blob/master/README.rst" title="github" target="_blank" rel="noopener">github</a>。</p><h3 id="aria2配置文件参数"><a href="#aria2配置文件参数" class="headerlink" title="aria2配置文件参数"></a>aria2配置文件参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">## 文件保存相关 ##</span><br><span class="line"># 文件的保存路径(可使用绝对路径或相对路径)，默认：当前启动位置</span><br><span class="line">dir=</span><br><span class="line"># 启用磁盘缓存，0为禁用缓存，需1.16以上版本，默认：16M</span><br><span class="line">disk-cache=32M</span><br><span class="line"># 遇到同名文件，自动重命名，默认：true</span><br><span class="line"># auto-file-renaming=true</span><br><span class="line"># 文件预分配方式，能有效降低磁盘碎片，默认：prealloc</span><br><span class="line"># 预分配所需时间：none &lt; falloc &lt; trunc &lt; prealloc</span><br><span class="line"># falloc和trunc则需要文件系统和内核支持</span><br><span class="line"># NTFS建议使用falloc，EXT3/4建议trunc，MAC下需要注释此项</span><br><span class="line">file-allocation=trunc</span><br><span class="line"># 断点续传</span><br><span class="line">continue=true</span><br><span class="line"># 获取服务器文件时间，默认：false</span><br><span class="line">remote-time=true</span><br><span class="line"></span><br><span class="line">## 下载连接相关 ##</span><br><span class="line"># 最大同时下载任务数，运行时可修改，默认：5</span><br><span class="line">max-concurrent-downloads=10</span><br><span class="line"># 同一服务器连接数，添加时可指定，默认：1</span><br><span class="line">max-connection-per-server=16</span><br><span class="line"># 最小文件分片大小，添加时可指定，取值范围1M-1024M，默认：20M</span><br><span class="line"># 假定size=10M，文件为20MiB则使用两个来源下载；文件为15MiB则使用一个来源下载</span><br><span class="line">min-split-size=1M</span><br><span class="line"># 单个任务最大线程数，添加时可指定，默认：5</span><br><span class="line">split=16</span><br><span class="line">#最大尝试次数，0表示不限制</span><br><span class="line">max-tries=5</span><br><span class="line">#设置重试间隔时间(秒)。当此选项的值大于0时，aria2在HTTP服务器返回503响应时将会重试</span><br><span class="line">retry-wait=0</span><br><span class="line"># 整体下载速度限制，运行时可修改，默认：0</span><br><span class="line"># max-overall-download-limit=0</span><br><span class="line"># 单个任务下载速度限制，默认：0</span><br><span class="line"># max-download-limit=0</span><br><span class="line"># 整体上传速度限制，运行时可修改，默认：0</span><br><span class="line">max-overall-upload-limit=0</span><br><span class="line"># 单个任务上传速度限制，默认：0</span><br><span class="line">max-upload-limit=0</span><br><span class="line"># 实时文件校验，默认：true</span><br><span class="line"># realtime-chunk-checksum=true</span><br><span class="line"># 禁用IPv6，默认：false</span><br><span class="line">disable-ipv6=false</span><br><span class="line"># 支持GZip，默认：false</span><br><span class="line">http-accept-gzip=true</span><br><span class="line"></span><br><span class="line">## 进度保存相关 ##</span><br><span class="line"># 从会话文件中读取下载任务</span><br><span class="line">input-file=/etc/aria2/aria2.session</span><br><span class="line"># 在Aria2退出时保存“错误/未完成”的下载任务到会话文件</span><br><span class="line">save-session=/etc/aria2/aria2.session</span><br><span class="line"># 定时保存会话，0为退出时才保存，需1.16.1以上版本，默认：0</span><br><span class="line">save-session-interval=60</span><br><span class="line"># 强制保存会话，即使任务已经完成，默认：false</span><br><span class="line"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span><br><span class="line"># force-save=true</span><br><span class="line"></span><br><span class="line">## RPC相关设置 ##</span><br><span class="line"># 启用RPC，默认：false</span><br><span class="line">enable-rpc=true</span><br><span class="line"># 允许所有来源，默认：false</span><br><span class="line">rpc-allow-origin-all=true</span><br><span class="line"># 允许非外部访问，默认：false</span><br><span class="line">rpc-listen-all=true</span><br><span class="line"># 设置最大的JSON-RPC/XML-RPC请求大小，默认2M</span><br><span class="line">rpc-max-request-size=10M</span><br><span class="line"># 事件轮询方式，取值：[epoll, kqueue, port, poll, select]，不同系统默认值不同</span><br><span class="line"># event-poll=select</span><br><span class="line"># RPC监听端口，端口被占用时可以修改，默认：6800</span><br><span class="line"># rpc-listen-port=6800</span><br><span class="line"># 设置的RPC授权令牌，v1.18.4新增功能，取代--rpc-user和--rpc-passwd选项</span><br><span class="line"># rpc-secret=&lt;TOKEN&gt;</span><br><span class="line"># 设置的RPC访问用户名，此选项新版已废弃，建议改用--rpc-secret选项</span><br><span class="line"># rpc-user=&lt;USER&gt;</span><br><span class="line"># 设置的RPC访问密码，此选项新版已废弃，建议改用--rpc-secret选项</span><br><span class="line"># rpc-passwd=&lt;PASSWORD&gt;</span><br><span class="line"># HTTPS相关配置</span><br><span class="line"># rpc-secure=true</span><br><span class="line"># 证书路径</span><br><span class="line"># rpc-certificate=/path/pem/pem</span><br><span class="line"># 私钥路径</span><br><span class="line"># rpc-private-key=/path/key/key</span><br><span class="line"></span><br><span class="line">## BT/PT下载相关 ##</span><br><span class="line"># 当下载的是一个种子(以.torrent结尾)时，自动开始BT任务，默认：true</span><br><span class="line"># follow-torrent=true</span><br><span class="line"># BT监听端口，当端口被屏蔽时使用，默认：6881-6999</span><br><span class="line">listen-port=51200</span><br><span class="line"># 单个种子最大连接数，默认：55</span><br><span class="line"># bt-max-peers=55</span><br><span class="line"># 设置最低的加密级别，可选全连接加密arc4，默认是头加密plain</span><br><span class="line">bt-min-crypto-level=arc4</span><br><span class="line"># 需要加密</span><br><span class="line">bt-require-crypto=true</span><br><span class="line"># 强制加密</span><br><span class="line">bt-force-encryption=true</span><br><span class="line"># 打开DHT功能，PT需要禁用，默认：true</span><br><span class="line"># enable-dht=false</span><br><span class="line"># 打开IPv6 DHT功能，PT需要禁用</span><br><span class="line"># enable-dht6=false</span><br><span class="line"># DHT网络监听端口，默认：6881-6999</span><br><span class="line"># dht-listen-port=6881-6999</span><br><span class="line"># 本地节点查找，PT需要禁用，默认：false</span><br><span class="line"># bt-enable-lpd=false</span><br><span class="line"># 种子交换，PT需要禁用，默认：true</span><br><span class="line"># enable-peer-exchange=false</span><br><span class="line"># 期望下载速度，aria2会临时提高连接数以提高下载速度，单位K或M。默认：50K</span><br><span class="line">bt-request-peer-speed-limit=10M</span><br><span class="line"># 客户端伪装，PT需要保持user-agent和peer-agent两个参数一致</span><br><span class="line">user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36</span><br><span class="line">peer-id-prefix=-TR2930-</span><br><span class="line">peer-agent=Transmission/2.93</span><br><span class="line"># user-agent=qBittorrent v4.1.3</span><br><span class="line"># peer-agent=qBittorrent v4.1.3</span><br><span class="line"># peer-id-prefix=-qB4130-</span><br><span class="line"># peer-agent=uTorrentMac/1870(43796)</span><br><span class="line"># peer-id-prefix=-UM1870-</span><br><span class="line"># peer-agent=Deluge 1.3.15</span><br><span class="line"># peer-id-prefix=-DE13F0-</span><br><span class="line"># 当种子的分享率达到这个数时，自动停止做种，0为一直做种，默认：1.0</span><br><span class="line">seed-ratio=1.0</span><br><span class="line"># 最小做种时间。此选项设置为0时，将在BT任务下载完成后不进行做种</span><br><span class="line">seed-time=0</span><br><span class="line">#BT/Metalink 文件完整性检测，默认：false</span><br><span class="line">check-integrity=true</span><br><span class="line"># BT校验相关，默认：true</span><br><span class="line">bt-hash-check-seed=true</span><br><span class="line"># 继续之前的BT任务时，无需再次校验，默认：false</span><br><span class="line">bt-seed-unverified=true</span><br><span class="line"># 保存磁力链接元数据为种子文件(.torrent文件)，默认：false</span><br><span class="line">bt-save-metadata=false</span><br><span class="line"># 加载已保存的元数据文件，默认：false</span><br><span class="line">bt-load-saved-metadata=true</span><br><span class="line"># 删除未选择文件，默认：false</span><br><span class="line">bt-remove-unselected-file=true</span><br><span class="line"># 保存上传的种子，默认：true</span><br><span class="line"># rpc-save-upload-metadata=false</span><br></pre></td></tr></table></figure><p>配置文件目录为<strong>/etc/aia2/</strong>。</p><p>更多配置参数查询<a href="https://aria2.github.io/manual/en/html/aria2c.html#aria2-conf" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p><h3 id="aria2的systemd服务脚本"><a href="#aria2的systemd服务脚本" class="headerlink" title="aria2的systemd服务脚本"></a>aria2的systemd服务脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Aria2c download manager</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=aria2</span><br><span class="line">Group=aria2</span><br><span class="line">ExecStart=/usr/local/bin/aria2c --conf-path=/etc/aria2/aria2.conf</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=2s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>脚本地址为<strong>/etc/systemd/system/aria2.service</strong>。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>使用此脚本前请添加aria2用户或更改为其它用户，并设置配置文件目录及下载目录权限。</p><p>aria2 Web前端推荐<a href="https://github.com/mayswind/AriaNg" title="AriaNg" target="_blank" rel="noopener">AiraNg</a>、<a href="https://github.com/ziahamza/webui-aria2" title="webui-aria2" target="_blank" rel="noopener">webui-aria2</a>或<a href="https://github.com/binux/yaaw" title="YAAW" target="_blank" rel="noopener">YAAW</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://aria2.github.io&quot; title=&quot;aria2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;aria2&lt;/a&gt;是一款轻量的支持多协议的开源命令行下载工具，支持HTTP/HTTPS、FTP、SFTP、BitTo
      
    
    </summary>
    
    
      <category term="aria2" scheme="https://weair.cc/tags/aria2/"/>
    
  </entry>
  
  <entry>
    <title>反向代理Google</title>
    <link href="https://weair.cc/reverse-proxy-google/"/>
    <id>https://weair.cc/reverse-proxy-google/</id>
    <published>2019-03-07T16:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>反代Google之前要准备的各种乱七八糟的包括但不限于一台国外的VPS、一个域名、SSL证书等等，请提前准备好。</p><h3 id="Apache反代"><a href="#Apache反代" class="headerlink" title="Apache反代"></a>Apache反代</h3><p>Apache需安装开启<strong>proxy</strong>相关模块以及<strong>substitute</strong>模块。</p><p>Apache配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost ip_address:80&gt;</span><br><span class="line">    ServerAdmin admin@domain.name</span><br><span class="line">    ServerName domain.name</span><br><span class="line">    ServerAlias *.domain.name</span><br><span class="line">    Redirect / https://domain.name</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">&lt;VirtualHost ip_address:443&gt;</span><br><span class="line">    ServerAdmin admin@domain.name</span><br><span class="line">    ServerName domain.name</span><br><span class="line">    ServerAlias *.domain.name</span><br><span class="line">#403跳转页面。</span><br><span class="line">#    ErrorDocument 403 https://www.bing.com/</span><br><span class="line">    SSLEngine on</span><br><span class="line">    SSLCertificateFile /path/cert/pem.pem</span><br><span class="line">    SSLCACertificateFile /path/cert/crt.crt</span><br><span class="line">    SSLCertificateKeyFile /path/cert/key.key</span><br><span class="line">    RewriteEngine On</span><br><span class="line">    RewriteCond %&#123;HTTP_HOST&#125; !^domain.name$ [NC]</span><br><span class="line">    RewriteRule ^(.*)$ https://domain.name$1 [L,R=301]</span><br><span class="line">#限制IP访问。</span><br><span class="line">#    &lt;Location /&gt;  </span><br><span class="line">#        Order Deny,Allow</span><br><span class="line">#        Deny from all</span><br><span class="line">#        Allow from 192.168.1.1</span><br><span class="line">#        Allow from 192.168.1.0/24</span><br><span class="line">#    &lt;/Location&gt;</span><br><span class="line">        SetEnvIf User-Agent &quot;.*MSIE.*&quot; \</span><br><span class="line">            nokeepalive ssl-unclean-shutdown \</span><br><span class="line">            downgrade-1.0 force-response-1.0</span><br><span class="line">        ProxyRequests Off</span><br><span class="line">        SSLProxyEngine On</span><br><span class="line">        RequestHeader set Front-End-Https &quot;On&quot;</span><br><span class="line">        ProxyPass / https://www.google.com/</span><br><span class="line">        ProxyPassReverse / https://www.google.com/</span><br><span class="line">        RequestHeader unset Accept-Encoding</span><br><span class="line">        AddOutputFilterByType INFLATE;SUBSTITUTE;DEFLATE text/html text/xml</span><br><span class="line">#关键字符替换。</span><br><span class="line">        Substitute s|www.google.com|domain.name|in</span><br><span class="line">        Header always set Strict-Transport-Security &quot;max-age=31536000; preload&quot;</span><br><span class="line">        Header always edit Set-Cookie ^(.*)$ ;HttpOnly;Secure</span><br><span class="line">        Header always set X-Content-Type-Options nosniff</span><br><span class="line">        Header always set X-Frame-Options SAMEORIGIN</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="Nginx反代"><a href="#Nginx反代" class="headerlink" title="Nginx反代"></a>Nginx反代</h3><p>Nginx需编译安装<strong><a href="https://github.com/yaoweibin/ngx_http_substitutions_filter_module" title="nginx_substitutions_filter" target="_blank" rel="noopener">nginx_substitutions_filter</a></strong>模块。</p><p>Nginx配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name domain.name;</span><br><span class="line">    rewrite ^ https://$server_name$request_uri? permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 http2;</span><br><span class="line">    listen [::]:443 http2;</span><br><span class="line">    ssl on;</span><br><span class="line">    server_name domain.name;</span><br><span class="line"></span><br><span class="line">    if ($host != &apos;domain.name&apos; ) &#123;</span><br><span class="line">        rewrite ^/(.*)$ https://$server_name/$1 permanent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">#403跳转页面。</span><br><span class="line">#    error_page   403   https://www.bing.com;</span><br><span class="line"></span><br><span class="line">    ssl_protocols       TLSv1.2 TLSv1.3;</span><br><span class="line">    ssl_ciphers         TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!DSS;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_certificate     /path/cert/pem.pem;</span><br><span class="line">    ssl_certificate_key /path/cert/key.key;</span><br><span class="line">    ssl_session_cache   shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line"></span><br><span class="line">#防止网络爬虫。</span><br><span class="line">    if ($http_user_agent ~* &quot;360Spider|qihoobot|Bingbot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|YandexBot|Yisouspider|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot&quot;) &#123;</span><br><span class="line">        return 403; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    resolver 1.1.1.1 [2606:4700:4700::1111] valid=30s;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass https://www.google.com;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_cookie_domain google.com domain.name; </span><br><span class="line">        proxy_connect_timeout 60s;</span><br><span class="line">        proxy_read_timeout 5400s;</span><br><span class="line">        proxy_send_timeout 5400s;</span><br><span class="line"></span><br><span class="line">        proxy_set_header Accept-Encoding &quot;&quot;;</span><br><span class="line">        proxy_set_header Host &quot;www.google.com&quot;;</span><br><span class="line">        proxy_set_header User-Agent $http_user_agent;</span><br><span class="line">        proxy_set_header Referer https://www.google.com;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr; </span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">        proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">        proxy_set_header Accept-Language &quot;zh-CN&quot;;</span><br><span class="line">        proxy_set_header Cookie &quot;PREF=ID=047808f19f6de346:U=0f62f33dd8549d11:FF=2:LD=en-US:NW=1:TM=1325338577:LM=1332142444:GM=1:SG=2:S=rE0SyJh2W1IQ-Maw&quot;;</span><br><span class="line"></span><br><span class="line">        subs_filter_types text/css text/xml text/javascript application/javascript application/json;</span><br><span class="line">#关键字符替换。</span><br><span class="line">        subs_filter www.google.com domain.name;</span><br><span class="line">        subs_filter www.google.com.hk domain.name;</span><br><span class="line"></span><br><span class="line">        sub_filter_once off;</span><br><span class="line"></span><br><span class="line">#限制IP访问。</span><br><span class="line">#        allow 192.168.1.1;</span><br><span class="line">#        allow 192.168.1.0/24;</span><br><span class="line">#        deny all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p><strong>domain.name</strong>替换成你自己的域名，建议为域名添加SSL证书，以及过滤IP访问。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;反代Google之前要准备的各种乱七八糟的包括但不限于一台国外的VPS、一个域名、SSL证书等等，请提前准备好。&lt;/p&gt;
&lt;h3 id=&quot;A
      
    
    </summary>
    
    
      <category term="Apache" scheme="https://weair.cc/tags/Apache/"/>
    
      <category term="Nginx" scheme="https://weair.cc/tags/Nginx/"/>
    
      <category term="Google" scheme="https://weair.cc/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>搭建Nextcloud</title>
    <link href="https://weair.cc/install-nextcloud/"/>
    <id>https://weair.cc/install-nextcloud/</id>
    <published>2019-03-07T04:00:00.000Z</published>
    <updated>2021-07-10T13:49:29.162Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://nextcloud.com/" title="Nextcloud" target="_blank" rel="noopener">Nextcloud</a>是一套用于创建网络硬盘的客户端－服务器软件。其功能与Dropbox相近，但Nextcloud是自由及开放源代码软件，每个人都可以在私人服务器上安装并运行它。</p><h3 id="搭建LNMP环境"><a href="#搭建LNMP环境" class="headerlink" title="搭建LNMP环境"></a>搭建LNMP环境</h3><ul><li><h4 id="下载lnmp一键安装包并解压"><a href="#下载lnmp一键安装包并解压" class="headerlink" title="下载lnmp一键安装包并解压"></a>下载lnmp一键安装包并解压</h4></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo wget http://soft.vpser.net/lnmp/lnmp1.7.tar.gz -O /usr/<span class="built_in">local</span>/src/lnmp1.7.tar.gz</span><br><span class="line">sudo tar -zxvf /usr/<span class="built_in">local</span>/src/lnmp1.7.tar.gz -C /usr/<span class="built_in">local</span>/src/ &amp;&amp; <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/lnmp1.7</span><br></pre></td></tr></table></figure><ul><li><h4 id="编辑lnmp-conf，以支持fileinfo"><a href="#编辑lnmp-conf，以支持fileinfo" class="headerlink" title="编辑lnmp.conf，以支持fileinfo"></a>编辑<strong>lnmp.conf</strong>，以支持<strong>fileinfo</strong></h4></li></ul><p>将<code>Enable_PHP_Fileinfo=&#39;n&#39;</code>改为<code>Enable_PHP_Fileinfo=&#39;y&#39;</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">"s#Enable_PHP_Fileinfo='n'#Enable_PHP_Fileinfo='y'#g"</span> lnmp.conf</span><br></pre></td></tr></table></figure><ul><li><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./install.sh</span><br></pre></td></tr></table></figure><p>进行安装，稍等片刻。</p><p>PS：强烈建议选择PHP7.0以上版本进行安装。</p><h3 id="安装Nextcloud"><a href="#安装Nextcloud" class="headerlink" title="安装Nextcloud"></a>安装Nextcloud</h3><ul><li><h4 id="进入网站目录并下载安装Nextcloud"><a href="#进入网站目录并下载安装Nextcloud" class="headerlink" title="进入网站目录并下载安装Nextcloud"></a>进入网站目录并下载安装Nextcloud</h4></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/ &amp;&amp; sudo wget https://download.nextcloud.com/server/releases/nextcloud-13.0.12.zip &amp;&amp; sudo unzip nextcloud-13.0.12.zip</span><br></pre></td></tr></table></figure><ul><li><h4 id="设置Nextcloud文件夹权限"><a href="#设置Nextcloud文件夹权限" class="headerlink" title="设置Nextcloud文件夹权限"></a>设置Nextcloud文件夹权限</h4></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R www:www nextcloud/</span><br></pre></td></tr></table></figure><p>PS：nextcloud文件夹下有两个文件<strong>.htaccess</strong>和<strong>.user.ini</strong>，如果要移动文件夹下的文件，请务必复制这两个，不然会报文件完整性错误。</p><ul><li><h4 id="添加Nextcloud数据库"><a href="#添加Nextcloud数据库" class="headerlink" title="添加Nextcloud数据库"></a>添加Nextcloud数据库</h4></li></ul><p>可以使用一键安装包自带的phpMyAdmin添加数据库，也可以直接使用命令行添加数据库。</p><ul><li><h4 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h4></li></ul><p>可参考Nextcloud<a href="https://docs.nextcloud.com/server/13/admin_manual/installation/nginx.html" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p><ul><li><h4 id="输入IP或域名进行访问"><a href="#输入IP或域名进行访问" class="headerlink" title="输入IP或域名进行访问"></a>输入IP或域名进行访问</h4></li></ul><p>填入账号、密码，数据库用户、数据库密码、数据库名，完成安装。</p><p>PS：注意配置好防火墙，放行对应端口，以及数据库可单独创建一个用户并赋予相应权限。</p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ul><li><h4 id="访问界面为英文且无法更改为中文"><a href="#访问界面为英文且无法更改为中文" class="headerlink" title="访问界面为英文且无法更改为中文"></a>访问界面为英文且无法更改为中文</h4></li></ul><p>修改<strong>php.ini</strong>,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br></pre></td></tr></table></figure><p>找到<code>disable_functions =</code>，删除<code>scandir,</code>，保存并退出，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service php-fpm restart</span><br></pre></td></tr></table></figure><p>重启PHP。</p><ul><li><h4 id="PHP的设置似乎有问题，无法获取系统环境变量。使用getenv-”PATH-”-测试时仅返回空结果。"><a href="#PHP的设置似乎有问题，无法获取系统环境变量。使用getenv-”PATH-”-测试时仅返回空结果。" class="headerlink" title="PHP的设置似乎有问题，无法获取系统环境变量。使用getenv(\”PATH\”)测试时仅返回空结果。"></a>PHP的设置似乎有问题，无法获取系统环境变量。使用getenv(\”PATH\”)测试时仅返回空结果。</h4></li></ul><p>修改<strong>php-fpm.conf</strong>，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br></pre></td></tr></table></figure><p>添加以下几行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">env[HOSTNAME] = $HOSTNAME</span><br><span class="line">env[PATH] = /usr/local/bin:/usr/bin:/bin</span><br><span class="line">env[TMP] = /tmp</span><br><span class="line">env[TMPDIR] = /tmp</span><br><span class="line">env[TEMP] = /tmp</span><br></pre></td></tr></table></figure><p>然后重启PHP。</p><ul><li><h4 id="您正在通过HTTP访问该站点-我们强烈建议您按照安全提示中的说明配置服务器强制使用HTTPS。"><a href="#您正在通过HTTP访问该站点-我们强烈建议您按照安全提示中的说明配置服务器强制使用HTTPS。" class="headerlink" title="您正在通过HTTP访问该站点, 我们强烈建议您按照安全提示中的说明配置服务器强制使用HTTPS。"></a>您正在通过HTTP访问该站点, 我们强烈建议您按照安全提示中的说明配置服务器强制使用HTTPS。</h4></li></ul><p>可以通过<a href="https://certbot.eff.org/" title="Let’s Encrypt" target="_blank" rel="noopener">Let’s Encrypt</a>申请一个免费的证书，配置Nginx以支持HTTPS。</p><ul><li><h4 id="PHP无法访问-dev-urandom-由于安全原因-这是强烈不推荐的。"><a href="#PHP无法访问-dev-urandom-由于安全原因-这是强烈不推荐的。" class="headerlink" title="PHP无法访问/dev/urandom, 由于安全原因, 这是强烈不推荐的。"></a>PHP无法访问/dev/urandom, 由于安全原因, 这是强烈不推荐的。</h4></li></ul><p>修改nginx配置文件下的<strong>fastcgi.conf</strong>，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/<span class="built_in">local</span>/nginx/conf/fastcgi.conf</span><br></pre></td></tr></table></figure><p>将<code>fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;</code>修改为<code>fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/:/dev/urandom&quot;;</code>。</p><ul><li><h4 id="PHP的组件OPcache没有正确配置。为了提供更好的性能-我们建议在php-ini文件中使用下列设置"><a href="#PHP的组件OPcache没有正确配置。为了提供更好的性能-我们建议在php-ini文件中使用下列设置" class="headerlink" title="PHP的组件OPcache没有正确配置。为了提供更好的性能, 我们建议在php.ini文件中使用下列设置:"></a>PHP的组件OPcache没有正确配置。为了提供更好的性能, 我们建议在php.ini文件中使用下列设置:</h4></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">opcache.enable=1</span><br><span class="line">opcache.enable_cli=1</span><br><span class="line">opcache.interned_strings_buffer=8</span><br><span class="line">opcache.max_accelerated_files=10000</span><br><span class="line">opcache.memory_consumption=128</span><br><span class="line">opcache.save_comments=1</span><br><span class="line">opcache.revalidate_freq=1</span><br></pre></td></tr></table></figure><p>修改<strong>php.ini</strong>，添加<code>zend_extension=&quot;opcache.so&quot;</code>，按照要求逐一修改或全部复制粘贴，重启PHP。</p><ul><li><h4 id="内存缓存未配置。-如果可用，请配置-memcache-以增强性能。"><a href="#内存缓存未配置。-如果可用，请配置-memcache-以增强性能。" class="headerlink" title="内存缓存未配置。 如果可用，请配置 memcache 以增强性能。"></a>内存缓存未配置。 如果可用，请配置 memcache 以增强性能。</h4></li></ul><p>安装redis以及phpredis组件，并开启redis，设置redis开机自启。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y redis</span><br><span class="line">sudo systemctl start redis &amp;&amp; sudo systemctl <span class="built_in">enable</span> redis</span><br></pre></td></tr></table></figure><p>PS：显示未安装redis时，建议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y epel-release</span><br><span class="line">sudo yum update -y</span><br></pre></td></tr></table></figure><p>进入软件包存放目录，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br></pre></td></tr></table></figure><p><a href="https://pecl.php.net/package/redis" title="PHP官网" target="_blank" rel="noopener">PHP官网</a>下载phpredis组件并解压，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://pecl.php.net/get/redis-4.3.0.tgz &amp;&amp; sudo tar -zxvf redis-4.3.0.tgz &amp;&amp; <span class="built_in">cd</span> redis-4.3.0/</span><br></pre></td></tr></table></figure><p>phpize生成configure配置脚本,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/<span class="built_in">local</span>/php/bin/phpize</span><br></pre></td></tr></table></figure><p>构建，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-php-config=/usr/<span class="built_in">local</span>/php/bin/php-config</span><br></pre></td></tr></table></figure><p>编译安装，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure><p>修改<strong>php.ini</strong>，添加<code>extension=&quot;redis.so&quot;</code>，重启PHP。</p><p>编辑nextcloud文件夹下的config文件夹下的<strong>config.php</strong>，添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&apos;filelocking.enabled&apos; =&gt; true,</span><br><span class="line">&apos;memcache.locking&apos; =&gt; &apos;\OC\Memcache\Redis&apos;,</span><br><span class="line">&apos;memcache.local&apos; =&gt; &apos;\OC\Memcache\Redis&apos;,</span><br><span class="line">&apos;redis&apos; =&gt; array(</span><br><span class="line">    &apos;host&apos; =&gt; &apos;localhost&apos;,</span><br><span class="line">    &apos;port&apos; =&gt; 6379,</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p>如有其它问题，查询Nextcloud<a href="https://docs.nextcloud.com/" title="官方文档" target="_blank" rel="noopener">官方文档</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://nextcloud.com/&quot; title=&quot;Nextcloud&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nextcloud&lt;/a&gt;是一套用于创建网络硬盘的客户端－服务器软件。其功能与Dropbox相近，但Nextc
      
    
    </summary>
    
    
      <category term="Nextcloud" scheme="https://weair.cc/tags/Nextcloud/"/>
    
  </entry>
  
</feed>
